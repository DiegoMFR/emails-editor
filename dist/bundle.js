!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){},function(t,e,n){"use strict";function i(){return Math.floor(10*Math.random())}n.r(e);class s extends HTMLElement{constructor(){super(),this.handleKey=t=>{switch(t.keyCode){case 44:case 32:case 13:t.preventDefault(),this.populateArea(),this.textInput.focus()}},this.handleBlur=()=>{this.populateArea()},this.handlePaste=()=>{window.setTimeout(()=>{this.populateArea(),this.textInput.focus()},5)},this.handleAreaClick=t=>{t.target===this.textarea&&this.textInput.focus()},this.populateArea=()=>{var t;this.textInput.value.length&&(this.textInput.remove(),this.textarea.innerHTML+=(t=this.textInput.value,t.split(/[\s, ]+/).filter(t=>t.length>0&&"â€‹"!==t).map(t=>`<email-item${function(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}(t)?"":' class="invalid"'}>\n                    <span>${t}</span>\n                    <i class="close">&#215</i>\n                </email-item>`).join("")),this.textInput.value="",this.textInput.setAttribute("placeholder","Add more people..."),this.textarea.appendChild(this.textInput),this.dispatchEvent(this.editorChangeEvt))},this.getEmailsCount=()=>this.querySelectorAll("email-item:not(.invalid)").length,this.addEmail=()=>{this.textInput.value=`${["bgates","sjobs","jbezos","mzuckerberg","emusk","toreilly","lpage","jive","rstallman","ltrovalds"][i()]}@${["gmail","microsoft","miro","facebook","linkedin","amazon","tesla","medium","linux","apple"][i()]}.com`,this.populateArea()},this.innerHTML='<div class="text-area">\n            <input type="text" placeholder="Add people..."></input>\n        </div>',this.textarea=this.querySelector("div"),this.textInput=this.querySelector("input"),this.textInput.addEventListener("blur",this.handleBlur),this.textInput.addEventListener("keypress",this.handleKey),this.textInput.addEventListener("paste",this.handlePaste),this.textarea.addEventListener("click",this.handleAreaClick),this.editorChangeEvt=new CustomEvent("editor:change"),this.textInput.focus()}}class r extends HTMLElement{constructor(){super(),this.closeClickHandler=()=>{this.remove()},this.querySelector(".close").addEventListener("click",this.closeClickHandler)}}n(0);window.customElements.define("email-editor",s),window.customElements.define("email-item",r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,